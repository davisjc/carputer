#!/bin/sh
#
# Carputer transport device mount script.
#
# Mounts a recognized carputer transport device as determined by $TRANSPORT_ID.
#
# When plugged into the carputer, also triggers work to sync code and music
# files with the transport device. Blinks the status light to indicate
# transfer status.
#
# Can be executed by devmon (part of the udevil package) with arguments such as:
#
#     $ devmon --exec-on-drive "/path/to/this/script %f %d"
#
# @author: Johnathan Davis


DEVICE=$1
MNT=$2

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

source "${SCRIPT_DIR}/music_sync_vars"

log_file="${TRANSPORT_DIR}/log.txt"
carputer_repo="$(cd "${SCRIPT_DIR}" && git rev-parse --show-toplevel)"

if [[ -f "${MNT}/${TRANSPORT_ID_FILE}" && $(cat "${MNT}/${TRANSPORT_ID_FILE}") == "$TRANSPORT_ID" ]]; then
    udevil umount "$DEVICE"
    udevil mount "$DEVICE" "$TRANSPORT_DIR"
    if [[ "$(hostname)" == "$CARPUTER_HOST" ]]; then
        "${SCRIPT_DIR}/light_blink" &
        pid_blink=$!

        echo "$(date) -- Pulling most recent code from transport device..." |
            tee -a "$log_file"
        echo "" | tee -a "$log_file"
        cd "$carputer_repo" && git fetch --all | tee -a "$log_file" &&
            git reset --hard origin/master | tee -a "$log_file"
        echo "" | tee -a "$log_file"

        # TODO get mpd to stop auto-updating so we don't have to take it down.
        sudo systemctl stop mpd.service

        # Trigger carputer update.
        "$SCRIPT_DIR/music_sync_to_carputer"

        sudo systemctl start mpd.service

        udevil umount "$DEVICE"

        kill $pid_blink
        "${SCRIPT_DIR}/light_set" 0
    fi
fi

